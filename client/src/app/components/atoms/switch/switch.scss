// =========================| Switch |========================= //



.pa-switch {

  //--------------------------| Variables

  $wing-width: get-em-unit($roles-size-switch-width);
  $lever-height: .6em;
  $focus-color: map-get($reg-colors, 'orange-light');
  $shadow: .12em .12em .1em -.1em $focus-color;


  //--------------------------| Base

  @include border-radius(.15em);
  @include transition(all map-get($roles-transitions, 'glow') ease-in-out);

  position: relative;
  display: block;
  height: get-em-unit($roles-size-switch-height);
  cursor: pointer;
  border: 1px solid map-get($reg-colors, 'silver');

  &:hover {
    border-color: $focus-color;
  }


  //--------------------------| Wings

  @each $wing in 1 2 3 {
    $gap: if($wing == 1, 0, $wing / 2);

    &[data-wings='#{$wing}'] {
      width: get-em-unit(($roles-size-switch-width + $gap) * $wing);
    }
  }


  //--------------------------| Background

  &:not(.black) {
    @include background-image(map-get($reg-gradients, 'pale-silver'));
  }

  &.black {
    @include background-image(map-get($reg-gradients, 'dark-silver'));
  }


  //--------------------------| Lever

  .lever {
    @include translateY(-#{$lever-height/2});

    position: absolute;
    top: 50%;
    left: -1px;
    width: $wing-width;
    padding: 0 .14em;

    .bar {
      @include border-radius(.15em);

      display: block;
      height: 100%;
    }
  }

  &:not(.fat) .lever {
    height: $lever-height;
  }

  &.fat .lever {
    height: $lever-height * 2;
  }

  &:not(.black) .lever .bar {
    @include background-image(map-get($reg-gradients, 'orange'));
  }

  &.black .lever .bar {
    @include background-image(map-get($reg-gradients, 'black'));
  }

  &[data-role='main'] .lever {
    left: 0;
    width: 100%;
  }


  //--------------------------| Label

  .label {
    position: absolute;
    right: 0;
    bottom: .1em;
    left: 0;
    font-size: map-get($roles-typo-font-sizes, 'meta');
    font-weight: map-get($roles-typo-font-weights, 'meta');
    color: map-get($roles-col-texts, 'meta');
    text-align: center;
  }


  //--------------------------| State

  &.glow {
    @include box-shadow($shadow);

    border-color: $focus-color;
  }


} // .pa-switch
