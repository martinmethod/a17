// =========================| Switcher |========================= //



.pa-switcher {

  //--------------------------| Data

  $roles: 'main' 'lights' 'outlets' 'unknown' 'cooking' 'laundry' 'boiler';


  //--------------------------| Variables

  $wing-width: get-em-unit($roles-size-switcher-width);
  $lever-height: .6em;
  $hover-color: map-get($reg-colors, 'orange-light');
  $marked-color: map-get($reg-colors, 'graphite');
  $selected-color: map-get($reg-colors, 'graphite');
  $shadow: 0 0 .4em map-get($reg-colors, 'graphite');
  $transition: all map-get($roles-transitions, 'glow') ease-in-out;


  //--------------------------| Base

  @include border-radius(.15em);
  @include transition($transition);

  position: relative;
  display: block;
  height: get-em-unit($roles-size-switcher-height);
  border: 1px solid map-get($reg-colors, 'silver');

  &,
  * {
    cursor: pointer;
  }


  //--------------------------| Wings

  @each $wing in 1 2 3 {
    $gap: if($wing == 1, 0, $wing / 2);

    &[data-wings='#{$wing}'] {
      width: get-em-unit(($roles-size-switcher-width + $gap) * $wing);
    }
  }


  //--------------------------| Background

  &:not(.black) {
    @include background-image(map-get($reg-gradients, 'pale-silver'));
  }

  &.black {
    @include background-image(map-get($reg-gradients, 'dark-silver'));
  }


  //--------------------------| Lever

  .lever {
    @include translateY(-#{$lever-height/2});
    @include transition($transition);

    position: absolute;
    top: 50%;
    left: -1px;
    width: $wing-width;
    padding: 0 .14em;

    .bar {
      @include border-radius(.15em);

      display: block;
      height: 100%;
    }
  }

  &:not(.fat) .lever {
    height: $lever-height;
  }

  &.fat .lever {
    height: $lever-height * 2;
  }

  &:not(.black) .lever .bar {
    @include background-image(map-get($reg-gradients, 'orange'));
  }

  &.black .lever .bar {
    @include background-image(map-get($reg-gradients, 'black'));
  }

  &[data-role='main'] .lever {
    left: 0;
    width: 100%;
  }


  //--------------------------| Label

  .pa-meta {
    position: absolute;
    right: 0;
    bottom: .1em;
    left: 0;
    text-align: center;
  }


  //--------------------------| Roles

  @each $role in $roles {
    $url: '../../../../icons/#{$role}.svg';

    &[data-role='#{$role}'] {
      &::before {
        $size: .66em;

        @include transition($transition);
        @include translateX(-50%);
        @include opacity(0);

        position: absolute;
        top: .2em;
        left: 50%;
        width: $size;
        height: $size;
        content: '';
        background: url($url) center no-repeat;
      }
    }
  }


  //--------------------------| States

  &.marked {
    @include box-shadow($shadow);

    border-color: $marked-color;

    &::before {
      @include opacity(.5);
    }

    .lever {
      @include translateY(-#{$lever-height * 1.2});
    }
  }

  &.selected {
    border-color: $selected-color;

    &::before {
      @include opacity(.5);
    }

    .lever {
      @include translateY(-#{$lever-height * 1.2});
    }
  }

  @media (hover: hover) {
    &:hover {
      border-color: $hover-color;

      &::before {
        @include opacity(.5);
      }
    }
  }


} // .pa-switcher
